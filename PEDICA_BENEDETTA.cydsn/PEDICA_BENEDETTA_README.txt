COMMENTI SUL CODICE
Assignment 05 - Codice per campionare i 3 assi dell'accelerometro a 6 diverse frequenze settando i diversi registri ed utilizzando una EEPROM per salvare i valori delle frequenze. I dati vengono poi plottati tramite BCP a cui devono arrivare convertiti da digit in m/s2.
Autore: Benedetta Pedica
Anno: 2020

//FILES IMPLEMENTATI
Il mio codice è strutturato in diversi file .c e .h:
Un file Macros.h in cui vengono definite tutte le macro che vengono poi utilizzate nel codice, divise e commentate in base al loro ambito d'utilizzo, un file .h ed uno .c utilizzati per implementare il protocollo di comunicazione I2C in cui vengono dichiarate e definite tutte le funzioni,un file .h chiamato ErrorCodes in cui viene definita una struct utilizzata per l'errore, ed un file .h ed uno .c relativi all'interrupt del Debouncer utilizzato per l'onboard button che viene triggerata ogni volta che il pulsante viene premuto con l'obiettivo di aggiornare la frequenza.

//MAIN
Nel main si sviluppa il codice vero e proprio. In primo luogo si inizializzano le periferiche, viene aggiornata la temperatura dell'EEPROM e viene introdotto un delay di 5 ms per la corretta esecuzione delle componenti. Poi, attraverso uno switch case, si effettua un controllo sulla frequenza salvata nell'indirizzo scelto nella memoria EEPROM: si cicla la frequenza tra le sei possibili e si setta di nuovo ad 1 Hz alla fine del ciclo.Dopo di che si fa un controllo tramite la funzione IsDeviceConnected su quale device è connesso nel I2C bus. Vengono poi configurati i Ctrl Registers 1 e 4 e viene evidenziato il loro corretto (o scorretto) settaggio tramite messaggi trasmessi in UART. 

//FOR INFINITO
Infine, dopo aver definito correttamente il pacchetto di dati che viene mandato relativo all'accelerazione nei tre assi in m/s2, si entra nel for infinito dove il programma vero e proprio si sviluppa: se la interrupt viene triggerata significa che il pulsante onboard è stato premuto, quindi si entra nel primo if e la frequenza salvata in EEPROM viene aggiornata. Altrimenti, se ci si trova nella situazione steady state ad una certa frequenza, si vanno a leggere tutti i registri del LIS3DH relativi all'accelerazione nei tre assi (in most significant e least significant bit) e, se la lettura non ritorna errori, si elaborano i dati in modo da poterli trasmettere correttamente. In praticolare, si assemblano i valori low e high dei 3 assi che sono left aligned in complemento a 2, vengono allineati a destra e vengono convertiti in m/s2 tramite retta di calibrazione, poi per salvarli come int16 si moltiplica per 1000 salvando le prime 3 cifre decmali. Infine viene fatto il cast da float a int16 per poter mandare dati corretti al Bridge Control Panel. 